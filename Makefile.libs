# -*- makefile-gmake -*-

# Include-able makefile for building Chibi libraries - see README.libs
# for usage.

.PHONY: all all-libs clean clean-libs dist-clean dist-clean-libs install install-libs uninstall uninstall-libs doc doc-libs
.PRECIOUS: %.c

# install configuration

CC        ?= cc
CD        ?= cd
RM        ?= rm -f
LS        ?= ls
INSTALL   ?= install
MKDIR     ?= $(INSTALL) -d
RMDIR     ?= rmdir
TAR       ?= tar
DIFF      ?= diff
GREP      ?= grep
FIND      ?= find
SYMLINK   ?= ln -s

PREFIX    ?= /usr/local
BINDIR    ?= $(PREFIX)/bin
LIBDIR    ?= $(PREFIX)/lib
SOLIBDIR  ?= $(PREFIX)/lib
INCDIR    ?= $(PREFIX)/include/chibi
MODDIR    ?= $(PREFIX)/share/chibi
BINMODDIR ?= $(PREFIX)/lib/chibi
MANDIR    ?= $(PREFIX)/share/man/man1

DESTDIR   ?=

CHIBI     ?= chibi-scheme$(EXE)
CHIBI_FFI ?= chibi-ffi
CHIBI_DOC ?= chibi-doc

########################################################################
# System configuration - if not using GNU make, set PLATFORM and the
# flags from Makefile.detect (at least SO, EXE, CLIBFLAGS) as necessary.

include Makefile.detect

########################################################################
# Library config.
#
# This is to allow "make SEXP_USE_BOEHM=1" and "make SEXP_USE_DL=0" to
# automatically include the necessary compiler and linker flags in
# addition to setting those features.  If not using GNU make just
# comment out the ifs and use the else branches for the defaults.

ifeq ($(SEXP_USE_BOEHM),1)
GCLDFLAGS := -lgc
XCPPFLAGS := $(CPPFLAGS) -Iinclude $(D:%=-DSEXP_USE_%) -DSEXP_USE_BOEHM=1
else
GCLDFLAGS :=
XCPPFLAGS := $(CPPFLAGS) -Iinclude $(D:%=-DSEXP_USE_%)
endif

ifeq ($(SEXP_USE_DL),0)
XLDFLAGS  := $(LDFLAGS) $(RLDFLAGS) $(GCLDFLAGS) -lm
XCFLAGS   := -Wall -DSEXP_USE_DL=0 -g -g3 -Os $(CFLAGS)
else
XLDFLAGS  := $(LDFLAGS) $(RLDFLAGS) $(GCLDFLAGS) $(LIBDL) -lm
XCFLAGS   := -Wall -g -g3 -Os $(CFLAGS)
endif

########################################################################

all-libs: $(COMPILED_LIBS)

lib/%.c: lib/%.stub $(CHIBI_FFI_DEPENDENCIES)
	$(CHIBI_FFI) $<

lib/%$(SO): lib/%.c $(INCLUDES)
	$(CC) $(CLIBFLAGS) $(XCPPFLAGS) $(XCFLAGS) -o $@ $< -L. -lchibi-scheme

doc-libs: $(HTML_LIBS)

doc/lib/%.html: lib/%.sld
	$(MKDIR) $(dir $@)
	$(CHIBI_DOC) $(subst /,.,$*) > $@

clean-libs:
	$(RM) $(COMPILED_LIBS)
	$(RM) -r $(patsubst %,%.dSYM,$(COMPILED_LIBS))
	$(RM) $(HTML_LIBS)

dist-clean-libs: clean-libs
	$(RM) $(patsubst %.stub, %.c, $(shell $(FIND) lib -name \*.stub))

install-libs: all-libs
	for dir in $(dir $(patsubst lib/%,%,$(COMPILED_LIBS))) ; do \
	$(MKDIR) $(DESTDIR)$(BINMODDIR)/$$dir; \
	done
	for file in $(patsubst lib/%,%,$(COMPILED_LIBS)) ; do \
	$(INSTALL) lib/$$file $(DESTDIR)$(BINMODDIR)/$$file ; \
	done
	for dir in $(dir $(patsubst lib/%,%,$(SCM_LIBS))) ; do \
	$(MKDIR) $(DESTDIR)$(MODDIR)/$$dir; \
	done
	for file in $(patsubst lib/%,%,$(SCM_LIBS)) ; do \
	$(INSTALL) lib/$$file $(DESTDIR)$(MODDIR)/$$file ; \
	done

uninstall-libs:
	for file in $(patsubst lib/%,%,$(COMPILED_LIBS)) ; do \
	$(RM) $(DESTDIR)$(BINMODDIR)/$$file ; \
	done
	for file in $(patsubst lib/%,%,$(SCM_LIBS)) ; do \
	$(RM) $(DESTDIR)$(MODDIR)/$$file ; \
	done
